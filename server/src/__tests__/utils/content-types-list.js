export default {
  'admin::permission': {
    collectionName: 'admin_permissions',
    info: {
      name: 'Permission',
      description: '',
      singularName: 'permission',
      pluralName: 'permissions',
      displayName: 'Permission',
    },
    options: {},
    pluginOptions: {
      'content-manager': [Object],
      'content-type-builder': [Object],
    },
    attributes: {
      action: [Object],
      subject: [Object],
      properties: [Object],
      conditions: [Object],
      role: [Object],
      createdAt: [Object],
      updatedAt: [Object],
      createdBy: [Object],
      updatedBy: [Object],
    },
    kind: 'collectionType',
    __schema__: {
      collectionName: 'admin_permissions',
      info: [Object],
      options: {},
      pluginOptions: [Object],
      attributes: [Object],
      kind: 'collectionType',
    },
    modelType: 'contentType',
    modelName: 'permission',
    connection: 'default',
    uid: 'admin::permission',
    plugin: 'admin',
    globalId: 'AdminPermission',
    actions: undefined,
    lifecycles: undefined,
  },
  'admin::user': {
    collectionName: 'admin_users',
    info: {
      name: 'User',
      description: '',
      singularName: 'user',
      pluralName: 'users',
      displayName: 'User',
    },
    pluginOptions: {
      'content-manager': [Object],
      'content-type-builder': [Object],
    },
    attributes: {
      firstname: [Object],
      lastname: [Object],
      username: [Object],
      email: [Object],
      password: [Object],
      resetPasswordToken: [Object],
      registrationToken: [Object],
      isActive: [Object],
      roles: [Object],
      blocked: [Object],
      preferedLanguage: [Object],
      createdAt: [Object],
      updatedAt: [Object],
      createdBy: [Object],
      updatedBy: [Object],
    },
    kind: 'collectionType',
    __schema__: {
      collectionName: 'admin_users',
      info: [Object],
      pluginOptions: [Object],
      attributes: [Object],
      kind: 'collectionType',
    },
    modelType: 'contentType',
    modelName: 'user',
    connection: 'default',
    uid: 'admin::user',
    plugin: 'admin',
    globalId: 'AdminUser',
    actions: undefined,
    lifecycles: undefined,
  },
  'admin::role': {
    collectionName: 'admin_roles',
    info: {
      name: 'Role',
      description: '',
      singularName: 'role',
      pluralName: 'roles',
      displayName: 'Role',
    },
    options: {},
    pluginOptions: {
      'content-manager': [Object],
      'content-type-builder': [Object],
    },
    attributes: {
      name: [Object],
      code: [Object],
      description: [Object],
      users: [Object],
      permissions: [Object],
      createdAt: [Object],
      updatedAt: [Object],
      createdBy: [Object],
      updatedBy: [Object],
    },
    kind: 'collectionType',
    __schema__: {
      collectionName: 'admin_roles',
      info: [Object],
      options: {},
      pluginOptions: [Object],
      attributes: [Object],
      kind: 'collectionType',
    },
    modelType: 'contentType',
    modelName: 'role',
    connection: 'default',
    uid: 'admin::role',
    plugin: 'admin',
    globalId: 'AdminRole',
    actions: undefined,
    lifecycles: undefined,
  },
  'admin::api-token': {
    collectionName: 'strapi_api_tokens',
    info: {
      name: 'Api Token',
      singularName: 'api-token',
      pluralName: 'api-tokens',
      displayName: 'Api Token',
      description: '',
    },
    options: {},
    pluginOptions: {
      'content-manager': [Object],
      'content-type-builder': [Object],
    },
    attributes: {
      name: [Object],
      description: [Object],
      type: [Object],
      accessKey: [Object],
      createdAt: [Object],
      updatedAt: [Object],
      createdBy: [Object],
      updatedBy: [Object],
    },
    kind: 'collectionType',
    __schema__: {
      collectionName: 'strapi_api_tokens',
      info: [Object],
      options: {},
      pluginOptions: [Object],
      attributes: [Object],
      kind: 'collectionType',
    },
    modelType: 'contentType',
    modelName: 'api-token',
    connection: 'default',
    uid: 'admin::api-token',
    plugin: 'admin',
    globalId: 'AdminApiToken',
    actions: undefined,
    lifecycles: undefined,
  },
  'plugin::upload.file': {
    collectionName: 'files',
    info: {
      singularName: 'file',
      pluralName: 'files',
      displayName: 'File',
      description: '',
    },
    options: {},
    pluginOptions: {
      'content-manager': [Object],
      'content-type-builder': [Object],
    },
    attributes: {
      name: [Object],
      alternativeText: [Object],
      caption: [Object],
      width: [Object],
      height: [Object],
      formats: [Object],
      hash: [Object],
      ext: [Object],
      mime: [Object],
      size: [Object],
      url: [Object],
      previewUrl: [Object],
      provider: [Object],
      provider_metadata: [Object],
      related: [Object],
      createdAt: [Object],
      updatedAt: [Object],
      createdBy: [Object],
      updatedBy: [Object],
    },
    plugin: 'upload',
    uid: 'plugin::upload.file',
    kind: 'collectionType',
    __schema__: {
      collectionName: 'files',
      info: [Object],
      options: {},
      pluginOptions: [Object],
      attributes: [Object],
      kind: 'collectionType',
    },
    modelType: 'contentType',
    modelName: 'file',
    connection: 'default',
    globalId: 'UploadFile',
    actions: undefined,
    lifecycles: undefined,
  },
  'plugin::i18n.locale': {
    info: {
      singularName: 'locale',
      pluralName: 'locales',
      collectionName: 'locales',
      displayName: 'Locale',
      description: '',
    },
    options: { draftAndPublish: false },
    pluginOptions: {
      'content-manager': [Object],
      'content-type-builder': [Object],
    },
    attributes: {
      name: [Object],
      code: [Object],
      createdAt: [Object],
      updatedAt: [Object],
      createdBy: [Object],
      updatedBy: [Object],
    },
    plugin: 'i18n',
    uid: 'plugin::i18n.locale',
    kind: 'collectionType',
    __schema__: {
      info: [Object],
      options: [Object],
      pluginOptions: [Object],
      attributes: [Object],
      kind: 'collectionType',
    },
    modelType: 'contentType',
    modelName: 'locale',
    connection: 'default',
    collectionName: 'i18n_locale',
    globalId: 'I18NLocale',
    actions: undefined,
    lifecycles: undefined,
  },
  'plugin::users-permissions.permission': {
    collectionName: 'up_permissions',
    info: {
      name: 'permission',
      description: '',
      singularName: 'permission',
      pluralName: 'permissions',
      displayName: 'Permission',
    },
    pluginOptions: {
      'content-manager': [Object],
      'content-type-builder': [Object],
    },
    attributes: {
      action: [Object],
      role: [Object],
      createdAt: [Object],
      updatedAt: [Object],
      createdBy: [Object],
      updatedBy: [Object],
    },
    plugin: 'users-permissions',
    uid: 'plugin::users-permissions.permission',
    kind: 'collectionType',
    __schema__: {
      collectionName: 'up_permissions',
      info: [Object],
      pluginOptions: [Object],
      attributes: [Object],
      kind: 'collectionType',
    },
    modelType: 'contentType',
    modelName: 'permission',
    connection: 'default',
    globalId: 'UsersPermissionsPermission',
    actions: undefined,
    lifecycles: undefined,
  },
  'plugin::users-permissions.role': {
    collectionName: 'up_roles',
    info: {
      name: 'role',
      description: '',
      singularName: 'role',
      pluralName: 'roles',
      displayName: 'Role',
    },
    pluginOptions: {
      'content-manager': [Object],
      'content-type-builder': [Object],
    },
    attributes: {
      name: [Object],
      description: [Object],
      type: [Object],
      permissions: [Object],
      users: [Object],
      createdAt: [Object],
      updatedAt: [Object],
      createdBy: [Object],
      updatedBy: [Object],
    },
    plugin: 'users-permissions',
    uid: 'plugin::users-permissions.role',
    kind: 'collectionType',
    __schema__: {
      collectionName: 'up_roles',
      info: [Object],
      pluginOptions: [Object],
      attributes: [Object],
      kind: 'collectionType',
    },
    modelType: 'contentType',
    modelName: 'role',
    connection: 'default',
    globalId: 'UsersPermissionsRole',
    actions: undefined,
    lifecycles: undefined,
  },
  'plugin::users-permissions.user': {
    collectionName: 'up_users',
    info: {
      name: 'user',
      description: '',
      singularName: 'user',
      pluralName: 'users',
      displayName: 'User',
    },
    options: { draftAndPublish: false, timestamps: true },
    attributes: {
      username: [Object],
      email: [Object],
      provider: [Object],
      password: [Object],
      resetPasswordToken: [Object],
      confirmationToken: [Object],
      confirmed: [Object],
      blocked: [Object],
      role: [Object],
      createdAt: [Object],
      updatedAt: [Object],
      createdBy: [Object],
      updatedBy: [Object],
    },
    config: { attributes: [Object] },
    plugin: 'users-permissions',
    uid: 'plugin::users-permissions.user',
    kind: 'collectionType',
    __schema__: {
      collectionName: 'up_users',
      info: [Object],
      options: [Object],
      attributes: [Object],
      kind: 'collectionType',
    },
    modelType: 'contentType',
    modelName: 'user',
    connection: 'default',
    globalId: 'UsersPermissionsUser',
    actions: undefined,
    lifecycles: undefined,
  },
  'api::about.about': {
    kind: 'singleType',
    collectionName: 'abouts',
    info: {
      singularName: 'about',
      pluralName: 'abouts',
      displayName: 'about',
    },
    options: { draftAndPublish: false },
    pluginOptions: {},
    attributes: {
      name: [Object],
      description: [Object],
      createdAt: [Object],
      updatedAt: [Object],
      createdBy: [Object],
      updatedBy: [Object],
    },
    __schema__: {
      collectionName: 'abouts',
      info: [Object],
      options: [Object],
      pluginOptions: {},
      attributes: [Object],
      kind: 'singleType',
    },
    modelType: 'contentType',
    modelName: 'about',
    connection: 'default',
    uid: 'api::about.about',
    apiName: 'about',
    globalId: 'About',
    actions: {},
    lifecycles: {},
  },
  'api::movie.movie': {
    kind: 'collectionType',
    collectionName: 'movies',
    info: {
      singularName: 'movie',
      pluralName: 'movies',
      displayName: 'movies',
    },
    options: { draftAndPublish: false },
    pluginOptions: {},
    attributes: {
      title: [Object],
      createdAt: [Object],
      updatedAt: [Object],
      createdBy: [Object],
      updatedBy: [Object],
    },
    __schema__: {
      collectionName: 'movies',
      info: [Object],
      options: [Object],
      pluginOptions: {},
      attributes: [Object],
      kind: 'collectionType',
    },
    modelType: 'contentType',
    modelName: 'movie',
    connection: 'default',
    uid: 'api::movie.movie',
    apiName: 'movie',
    globalId: 'Movie',
    actions: {},
    lifecycles: {},
  },
  'api::restaurant.restaurant': {
    kind: 'collectionType',
    collectionName: 'restaurants',
    info: {
      singularName: 'restaurant',
      pluralName: 'restaurants',
      displayName: 'restaurant',
    },
    options: { draftAndPublish: false },
    pluginOptions: {},
    attributes: {
      title: [Object],
      description: [Object],
      createdAt: [Object],
      updatedAt: [Object],
      createdBy: [Object],
      updatedBy: [Object],
    },
    __schema__: {
      collectionName: 'restaurants',
      info: [Object],
      options: [Object],
      pluginOptions: {},
      attributes: [Object],
      kind: 'collectionType',
    },
    modelType: 'contentType',
    modelName: 'restaurant',
    connection: 'default',
    uid: 'api::restaurant.restaurant',
    apiName: 'restaurant',
    globalId: 'Restaurant',
    actions: {},
    lifecycles: {},
  },
  'api::article.article': {
    kind: 'collectionType',
    collectionName: 'articles',
    info: {
      singularName: 'article',
      pluralName: 'articles',
      displayName: 'article',
    },
    options: { draftAndPublish: true },
    pluginOptions: {},
    attributes: {
      title: [Object],
      content: [Object],
      publishedAt: [Object],
      createdAt: [Object],
      updatedAt: [Object],
      createdBy: [Object],
      updatedBy: [Object],
    },
    __schema__: {
      collectionName: 'articles',
      info: [Object],
      options: [Object],
      pluginOptions: {},
      attributes: [Object],
      kind: 'collectionType',
    },
    modelType: 'contentType',
    modelName: 'article',
    connection: 'default',
    uid: 'api::article.article',
    apiName: 'article',
    globalId: 'Article',
    actions: {},
    lifecycles: {},
  },
}
